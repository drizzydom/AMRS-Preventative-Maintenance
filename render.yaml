services:
  - type: web
    name: maintenance-tracker
    env: python
    buildCommand: |
      echo "Creating custom requirements file for Render deployment..."
      cat > render_requirements.txt << EOL
      # Core dependencies with fixed versions to avoid conflicts
      Flask==2.2.5
      Werkzeug==2.2.3
      click==8.1.3
      itsdangerous==2.1.2
      Jinja2==3.1.2
      MarkupSafe==2.1.2
      SQLAlchemy==2.0.12
      flask-sqlalchemy==3.0.3
      flask-login==0.6.2
      flask-mail==0.9.1
      flask-cors==4.0.0
      gunicorn==21.2.0
      pandas==2.0.3
      numpy==1.24.3
      
      # Additional useful packages
      python-dotenv==1.0.0
      pytz==2023.3
      requests==2.31.0
      # Add any other specific requirements your application needs
      EOL
      
      echo "Installing custom requirements..."
      pip install --upgrade pip
      pip install -r render_requirements.txt
      
      # In case of failure, try installing critical packages individually
      if [ $? -ne 0 ]; then
        echo "Attempting alternative installation method..."
        pip install Flask==2.2.5 Werkzeug==2.2.3 --no-deps
        pip install gunicorn==21.2.0 --no-deps
        pip install flask-login==0.6.2 flask-sqlalchemy==3.0.3 --no-deps
        pip install SQLAlchemy==2.0.12 --no-deps
      fi
      
      echo "Dependencies installed successfully"
    startCommand: |
      if [ -f "startup.sh" ]; then
        echo "Running startup script..."
        chmod +x startup.sh
        ./startup.sh
      else
        echo "Creating necessary directories..."
        mkdir -p /var/data/db
        mkdir -p /var/data/backupsg database..."
        mkdir -p /var/data/uploadsy
        chmod -R 755 /var/data
      fiStarting application..."
      echo "Starting application..."p
      gunicorn wsgi:app/health
    healthCheckPath: /health
    healthCheckTimeout: 5s
    envVars:APP
      - key: FLASK_APP
        value: app.pyFERED
      - key: PYTHONUNBUFFERED
        value: "1"
      - key: RENDER
        value: "true"
      - key: FLASK_DEBUGse"
        value: "false"Y
      - key: SECRET_KEYue: true
        generateValue: true
      - key: MAIL_SERVER
        sync: false
      - key: MAIL_PORT
        sync: false
      - key: MAIL_USERNAME
        sync: false
      - key: MAIL_PASSWORD
        sync: false_DEFAULT_SENDER
      - key: MAIL_DEFAULT_SENDER
        sync: falseT_ADMIN_PASSWORD
      - key: DEFAULT_ADMIN_PASSWORD
        generateValue: true
      - key: PORT
        fromService:
          type: web name: maintenance-tracker
          name: maintenance-trackerrKey: RENDER_PORT
          envVarKey: RENDER_PORT
      - key: DATA_DIR
        value: /var/data      - key: DATABASE_URL





      name: maintenance-data      mountPath: /var/data      sizeGB: 2    disk:        value: sqlite:///var/data/db/maintenance.db
      - key: LOG_LEVEL
        value: INFO
    disk:
      sizeGB: 2
      mountPath: /var/data
      name: maintenance-data
