# AMRS Nginx Configuration Template

server {
    listen 80;
    server_name _;
    
    # Redirect all HTTP to HTTPS
    return 301 https://$host:$server_port$request_uri;
}

server {
    listen 443 ssl;
    server_name _;
    
    # SSL certificates
    ssl_certificate /etc/nginx/ssl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey.pem;
    
    # SSL settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 5m;
    
    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options SAMEORIGIN;
    
    # Main proxy configuration
    location / {
        proxy_pass http://app:{{APP_PORT}};
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Extended timeouts for slow application startup
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        
        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Custom error page with auto-refresh
        error_page 502 504 /502.html;
    }
    
    # Custom error page for 502 Gateway errors
    location = /502.html {
        add_header Content-Type text/html;
        return 502 '
<!DOCTYPE html>
<html>
<head>
    <title>Server Temporarily Unavailable</title>
    <meta http-equiv="refresh" content="5">
    <style>
        body { font-family: Arial, sans-serif; margin: 0 auto; max-width: 600px; padding: 20px; text-align: center; }
        h1 { color: #e74c3c; }
        .spinner { display: inline-block; width: 50px; height: 50px; border: 5px solid rgba(0,0,0,0.1); 
                  border-radius: 50%; border-top-color: #3498db; animation: spin 1s linear infinite; margin-bottom: 20px; }
        @keyframes spin { to { transform: rotate(360deg); } }
        .countdown { margin-top: 20px; color: #666; }
    </style>
    <script>
        window.onload = function() {
            var seconds = 5;
            var countdown = document.getElementById("countdown");
            setInterval(function() {
                seconds--;
                countdown.textContent = seconds;
                if (seconds <= 0) location.reload();
            }, 1000);
        }
    </script>
</head>
<body>
    <div class="spinner"></div>
    <h1>Server Temporarily Unavailable</h1>
    <p>The application server is starting up. This page will refresh in <span id="countdown">5</span> seconds.</p>
    <div class="countdown">The application may take up to 30 seconds to initialize.</div>
</body>
</html>
        ';
    }
    
    # Health check endpoint
    location = /api/health {
        proxy_pass http://app:{{APP_PORT}}/api/health;
        proxy_set_header Host $host;
    }
    
    # Static files
    location /static/ {
        proxy_pass http://app:{{APP_PORT}}/static/;
        proxy_set_header Host $host;
        add_header Cache-Control "public, max-age=3600";
    }
    
    # SSL info page
    location = /ssl-info {
        proxy_pass http://app:{{APP_PORT}}/ssl-info;
        proxy_set_header Host $host;
    }
}
