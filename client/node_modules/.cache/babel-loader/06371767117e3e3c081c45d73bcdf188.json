{"ast":null,"code":"var _jsxFileName = \"/Users/dominicmoriello/Documents/GitHub/Copilot Preventative Maintenance/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Navbar from './Navbar';\nimport Login from './Login';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [maintenanceRecords, setMaintenanceRecords] = useState([]);\n  const [newRecord, setNewRecord] = useState({\n    machine: '',\n    part: '',\n    description: '',\n    date: ''\n  });\n  const [machines, setMachines] = useState([]);\n  const [expandedMachines, setExpandedMachines] = useState({});\n  useEffect(() => {\n    if (loggedIn) {\n      fetchMaintenanceRecords();\n      generateDummyData();\n    }\n  }, [loggedIn]);\n  const fetchMaintenanceRecords = async () => {\n    const response = await axios.get('http://localhost:5001/maintenance');\n    setMaintenanceRecords(response.data);\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewRecord({\n      ...newRecord,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    await axios.post('http://localhost:5001/maintenance', newRecord);\n    fetchMaintenanceRecords();\n  };\n  const handleDelete = async id => {\n    await axios.delete(`http://localhost:5001/maintenance/${id}`);\n    fetchMaintenanceRecords();\n  };\n  const generateDummyData = () => {\n    const dummyMachines = [];\n    for (let i = 1; i <= 4; i++) {\n      const parts = [];\n      const numParts = Math.floor(Math.random() * 15) + 1;\n      for (let j = 1; j <= numParts; j++) {\n        const lastMaintenanceDate = new Date();\n        lastMaintenanceDate.setDate(lastMaintenanceDate.getDate() - Math.floor(Math.random() * 30));\n        const nextMaintenanceDate = new Date(lastMaintenanceDate);\n        nextMaintenanceDate.setDate(lastMaintenanceDate.getDate() + 30);\n        parts.push({\n          id: j,\n          name: `Part ${j}`,\n          lastMaintenanceDate: lastMaintenanceDate.toISOString().split('T')[0],\n          nextMaintenanceDate: nextMaintenanceDate.toISOString().split('T')[0]\n        });\n      }\n      dummyMachines.push({\n        id: i,\n        name: `Machine ${i}`,\n        parts: parts.sort((a, b) => new Date(a.nextMaintenanceDate) - new Date(b.nextMaintenanceDate))\n      });\n    }\n    setMachines(dummyMachines);\n  };\n  const getColorForDate = date => {\n    const today = new Date();\n    const targetDate = new Date(date);\n    const diffTime = Math.abs(targetDate - today);\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n    if (diffDays <= 7) {\n      return 'red';\n    } else if (diffDays <= 14) {\n      return 'orange';\n    } else {\n      return 'green';\n    }\n  };\n  const toggleMachine = id => {\n    setExpandedMachines(prevState => ({\n      ...prevState,\n      [id]: !prevState[id]\n    }));\n  };\n  if (!loggedIn) {\n    return /*#__PURE__*/_jsxDEV(Login, {\n      setLoggedIn: setLoggedIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-center\",\n            children: \"Maintenance Tracker\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: machines.map(machine => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"machine\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: machine.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"toggle-button\",\n                onClick: () => toggleMachine(machine.id),\n                children: expandedMachines[machine.id] ? 'Collapse' : 'Expand'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 19\n              }, this), expandedMachines[machine.id] && /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: machine.parts.map(part => /*#__PURE__*/_jsxDEV(\"li\", {\n                  style: {\n                    color: getColorForDate(part.nextMaintenanceDate)\n                  },\n                  children: [part.name, \" - Last Maintenance: \", part.lastMaintenanceDate, \" - Next Maintenance: \", part.nextMaintenanceDate]\n                }, part.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 21\n              }, this)]\n            }, machine.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/add\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-center\",\n            children: \"Add Maintenance Record\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"machine\",\n              placeholder: \"Machine\",\n              value: newRecord.machine,\n              onChange: handleInputChange,\n              className: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"part\",\n              placeholder: \"Part\",\n              value: newRecord.part,\n              onChange: handleInputChange,\n              className: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"description\",\n              placeholder: \"Description\",\n              value: newRecord.description,\n              onChange: handleInputChange,\n              className: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              name: \"date\",\n              value: newRecord.date,\n              onChange: handleInputChange,\n              className: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              children: \"Add Record\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/view\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-center\",\n            children: \"View Maintenance Records\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"list-group\",\n            children: maintenanceRecords.map(record => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"list-group-item d-flex justify-content-between align-items-center\",\n              children: [record.machine, \" - \", record.part, \" - \", record.description, \" - \", record.date, /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDelete(record.id),\n                className: \"btn btn-danger\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 19\n              }, this)]\n            }, record.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bebh/ScXqOipEaggrhTMP2yZKg4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","BrowserRouter","Router","Route","Switch","Navbar","Login","jsxDEV","_jsxDEV","App","_s","loggedIn","setLoggedIn","maintenanceRecords","setMaintenanceRecords","newRecord","setNewRecord","machine","part","description","date","machines","setMachines","expandedMachines","setExpandedMachines","fetchMaintenanceRecords","generateDummyData","response","get","data","handleInputChange","e","name","value","target","handleSubmit","preventDefault","post","handleDelete","id","delete","dummyMachines","i","parts","numParts","Math","floor","random","j","lastMaintenanceDate","Date","setDate","getDate","nextMaintenanceDate","push","toISOString","split","sort","a","b","getColorForDate","today","targetDate","diffTime","abs","diffDays","ceil","toggleMachine","prevState","fileName","_jsxFileName","lineNumber","columnNumber","children","className","path","exact","map","onClick","style","color","onSubmit","type","placeholder","onChange","record","_c","$RefreshReg$"],"sources":["/Users/dominicmoriello/Documents/GitHub/Copilot Preventative Maintenance/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Navbar from './Navbar';\nimport Login from './Login';\nimport './App.css';\n\nfunction App() {\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [maintenanceRecords, setMaintenanceRecords] = useState([]);\n  const [newRecord, setNewRecord] = useState({ machine: '', part: '', description: '', date: '' });\n  const [machines, setMachines] = useState([]);\n  const [expandedMachines, setExpandedMachines] = useState({});\n\n  useEffect(() => {\n    if (loggedIn) {\n      fetchMaintenanceRecords();\n      generateDummyData();\n    }\n  }, [loggedIn]);\n\n  const fetchMaintenanceRecords = async () => {\n    const response = await axios.get('http://localhost:5001/maintenance');\n    setMaintenanceRecords(response.data);\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setNewRecord({ ...newRecord, [name]: value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    await axios.post('http://localhost:5001/maintenance', newRecord);\n    fetchMaintenanceRecords();\n  };\n\n  const handleDelete = async (id) => {\n    await axios.delete(`http://localhost:5001/maintenance/${id}`);\n    fetchMaintenanceRecords();\n  };\n\n  const generateDummyData = () => {\n    const dummyMachines = [];\n    for (let i = 1; i <= 4; i++) {\n      const parts = [];\n      const numParts = Math.floor(Math.random() * 15) + 1;\n      for (let j = 1; j <= numParts; j++) {\n        const lastMaintenanceDate = new Date();\n        lastMaintenanceDate.setDate(lastMaintenanceDate.getDate() - Math.floor(Math.random() * 30));\n        const nextMaintenanceDate = new Date(lastMaintenanceDate);\n        nextMaintenanceDate.setDate(lastMaintenanceDate.getDate() + 30);\n        parts.push({\n          id: j,\n          name: `Part ${j}`,\n          lastMaintenanceDate: lastMaintenanceDate.toISOString().split('T')[0],\n          nextMaintenanceDate: nextMaintenanceDate.toISOString().split('T')[0]\n        });\n      }\n      dummyMachines.push({\n        id: i,\n        name: `Machine ${i}`,\n        parts: parts.sort((a, b) => new Date(a.nextMaintenanceDate) - new Date(b.nextMaintenanceDate))\n      });\n    }\n    setMachines(dummyMachines);\n  };\n\n  const getColorForDate = (date) => {\n    const today = new Date();\n    const targetDate = new Date(date);\n    const diffTime = Math.abs(targetDate - today);\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n    if (diffDays <= 7) {\n      return 'red';\n    } else if (diffDays <= 14) {\n      return 'orange';\n    } else {\n      return 'green';\n    }\n  };\n\n  const toggleMachine = (id) => {\n    setExpandedMachines(prevState => ({\n      ...prevState,\n      [id]: !prevState[id]\n    }));\n  };\n\n  if (!loggedIn) {\n    return <Login setLoggedIn={setLoggedIn} />;\n  }\n\n  return (\n    <Router>\n      <Navbar />\n      <div className=\"container\">\n        <Switch>\n          <Route path=\"/\" exact>\n            <h1 className=\"text-center\">Maintenance Tracker</h1>\n            <div>\n              {machines.map(machine => (\n                <div key={machine.id} className=\"machine\">\n                  <h2>{machine.name}</h2>\n                  <button className=\"toggle-button\" onClick={() => toggleMachine(machine.id)}>\n                    {expandedMachines[machine.id] ? 'Collapse' : 'Expand'}\n                  </button>\n                  {expandedMachines[machine.id] && (\n                    <ul>\n                      {machine.parts.map(part => (\n                        <li key={part.id} style={{ color: getColorForDate(part.nextMaintenanceDate) }}>\n                          {part.name} - Last Maintenance: {part.lastMaintenanceDate} - Next Maintenance: {part.nextMaintenanceDate}\n                        </li>\n                      ))}\n                    </ul>\n                  )}\n                </div>\n              ))}\n            </div>\n          </Route>\n          <Route path=\"/add\">\n            <h1 className=\"text-center\">Add Maintenance Record</h1>\n            <form onSubmit={handleSubmit} className=\"form-group\">\n              <input type=\"text\" name=\"machine\" placeholder=\"Machine\" value={newRecord.machine} onChange={handleInputChange} className=\"form-control\" />\n              <input type=\"text\" name=\"part\" placeholder=\"Part\" value={newRecord.part} onChange={handleInputChange} className=\"form-control\" />\n              <input type=\"text\" name=\"description\" placeholder=\"Description\" value={newRecord.description} onChange={handleInputChange} className=\"form-control\" />\n              <input type=\"date\" name=\"date\" value={newRecord.date} onChange={handleInputChange} className=\"form-control\" />\n              <button type=\"submit\" className=\"btn btn-primary\">Add Record</button>\n            </form>\n          </Route>\n          <Route path=\"/view\">\n            <h1 className=\"text-center\">View Maintenance Records</h1>\n            <ul className=\"list-group\">\n              {maintenanceRecords.map(record => (\n                <li key={record.id} className=\"list-group-item d-flex justify-content-between align-items-center\">\n                  {record.machine} - {record.part} - {record.description} - {record.date}\n                  <button onClick={() => handleDelete(record.id)} className=\"btn btn-danger\">Delete</button>\n                </li>\n              ))}\n            </ul>\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AACzE,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACe,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAChE,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC;IAAEmB,OAAO,EAAE,EAAE;IAAEC,IAAI,EAAE,EAAE;IAAEC,WAAW,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAG,CAAC,CAAC;EAChG,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACyB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG1B,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE5DC,SAAS,CAAC,MAAM;IACd,IAAIY,QAAQ,EAAE;MACZc,uBAAuB,CAAC,CAAC;MACzBC,iBAAiB,CAAC,CAAC;IACrB;EACF,CAAC,EAAE,CAACf,QAAQ,CAAC,CAAC;EAEd,MAAMc,uBAAuB,GAAG,MAAAA,CAAA,KAAY;IAC1C,MAAME,QAAQ,GAAG,MAAM3B,KAAK,CAAC4B,GAAG,CAAC,mCAAmC,CAAC;IACrEd,qBAAqB,CAACa,QAAQ,CAACE,IAAI,CAAC;EACtC,CAAC;EAED,MAAMC,iBAAiB,GAAIC,CAAC,IAAK;IAC/B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChClB,YAAY,CAAC;MAAE,GAAGD,SAAS;MAAE,CAACiB,IAAI,GAAGC;IAAM,CAAC,CAAC;EAC/C,CAAC;EAED,MAAME,YAAY,GAAG,MAAOJ,CAAC,IAAK;IAChCA,CAAC,CAACK,cAAc,CAAC,CAAC;IAClB,MAAMpC,KAAK,CAACqC,IAAI,CAAC,mCAAmC,EAAEtB,SAAS,CAAC;IAChEU,uBAAuB,CAAC,CAAC;EAC3B,CAAC;EAED,MAAMa,YAAY,GAAG,MAAOC,EAAE,IAAK;IACjC,MAAMvC,KAAK,CAACwC,MAAM,CAAC,qCAAqCD,EAAE,EAAE,CAAC;IAC7Dd,uBAAuB,CAAC,CAAC;EAC3B,CAAC;EAED,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,MAAMe,aAAa,GAAG,EAAE;IACxB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC3B,MAAMC,KAAK,GAAG,EAAE;MAChB,MAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC;MACnD,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIJ,QAAQ,EAAEI,CAAC,EAAE,EAAE;QAClC,MAAMC,mBAAmB,GAAG,IAAIC,IAAI,CAAC,CAAC;QACtCD,mBAAmB,CAACE,OAAO,CAACF,mBAAmB,CAACG,OAAO,CAAC,CAAC,GAAGP,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;QAC3F,MAAMM,mBAAmB,GAAG,IAAIH,IAAI,CAACD,mBAAmB,CAAC;QACzDI,mBAAmB,CAACF,OAAO,CAACF,mBAAmB,CAACG,OAAO,CAAC,CAAC,GAAG,EAAE,CAAC;QAC/DT,KAAK,CAACW,IAAI,CAAC;UACTf,EAAE,EAAES,CAAC;UACLhB,IAAI,EAAE,QAAQgB,CAAC,EAAE;UACjBC,mBAAmB,EAAEA,mBAAmB,CAACM,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;UACpEH,mBAAmB,EAAEA,mBAAmB,CAACE,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;QACrE,CAAC,CAAC;MACJ;MACAf,aAAa,CAACa,IAAI,CAAC;QACjBf,EAAE,EAAEG,CAAC;QACLV,IAAI,EAAE,WAAWU,CAAC,EAAE;QACpBC,KAAK,EAAEA,KAAK,CAACc,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAIT,IAAI,CAACQ,CAAC,CAACL,mBAAmB,CAAC,GAAG,IAAIH,IAAI,CAACS,CAAC,CAACN,mBAAmB,CAAC;MAC/F,CAAC,CAAC;IACJ;IACA/B,WAAW,CAACmB,aAAa,CAAC;EAC5B,CAAC;EAED,MAAMmB,eAAe,GAAIxC,IAAI,IAAK;IAChC,MAAMyC,KAAK,GAAG,IAAIX,IAAI,CAAC,CAAC;IACxB,MAAMY,UAAU,GAAG,IAAIZ,IAAI,CAAC9B,IAAI,CAAC;IACjC,MAAM2C,QAAQ,GAAGlB,IAAI,CAACmB,GAAG,CAACF,UAAU,GAAGD,KAAK,CAAC;IAC7C,MAAMI,QAAQ,GAAGpB,IAAI,CAACqB,IAAI,CAACH,QAAQ,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;IAC5D,IAAIE,QAAQ,IAAI,CAAC,EAAE;MACjB,OAAO,KAAK;IACd,CAAC,MAAM,IAAIA,QAAQ,IAAI,EAAE,EAAE;MACzB,OAAO,QAAQ;IACjB,CAAC,MAAM;MACL,OAAO,OAAO;IAChB;EACF,CAAC;EAED,MAAME,aAAa,GAAI5B,EAAE,IAAK;IAC5Bf,mBAAmB,CAAC4C,SAAS,KAAK;MAChC,GAAGA,SAAS;MACZ,CAAC7B,EAAE,GAAG,CAAC6B,SAAS,CAAC7B,EAAE;IACrB,CAAC,CAAC,CAAC;EACL,CAAC;EAED,IAAI,CAAC5B,QAAQ,EAAE;IACb,oBAAOH,OAAA,CAACF,KAAK;MAACM,WAAW,EAAEA;IAAY;MAAAyD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC5C;EAEA,oBACEhE,OAAA,CAACN,MAAM;IAAAuE,QAAA,gBACLjE,OAAA,CAACH,MAAM;MAAAgE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVhE,OAAA;MAAKkE,SAAS,EAAC,WAAW;MAAAD,QAAA,eACxBjE,OAAA,CAACJ,MAAM;QAAAqE,QAAA,gBACLjE,OAAA,CAACL,KAAK;UAACwE,IAAI,EAAC,GAAG;UAACC,KAAK;UAAAH,QAAA,gBACnBjE,OAAA;YAAIkE,SAAS,EAAC,aAAa;YAAAD,QAAA,EAAC;UAAmB;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACpDhE,OAAA;YAAAiE,QAAA,EACGpD,QAAQ,CAACwD,GAAG,CAAC5D,OAAO,iBACnBT,OAAA;cAAsBkE,SAAS,EAAC,SAAS;cAAAD,QAAA,gBACvCjE,OAAA;gBAAAiE,QAAA,EAAKxD,OAAO,CAACe;cAAI;gBAAAqC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACvBhE,OAAA;gBAAQkE,SAAS,EAAC,eAAe;gBAACI,OAAO,EAAEA,CAAA,KAAMX,aAAa,CAAClD,OAAO,CAACsB,EAAE,CAAE;gBAAAkC,QAAA,EACxElD,gBAAgB,CAACN,OAAO,CAACsB,EAAE,CAAC,GAAG,UAAU,GAAG;cAAQ;gBAAA8B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC/C,CAAC,EACRjD,gBAAgB,CAACN,OAAO,CAACsB,EAAE,CAAC,iBAC3B/B,OAAA;gBAAAiE,QAAA,EACGxD,OAAO,CAAC0B,KAAK,CAACkC,GAAG,CAAC3D,IAAI,iBACrBV,OAAA;kBAAkBuE,KAAK,EAAE;oBAAEC,KAAK,EAAEpB,eAAe,CAAC1C,IAAI,CAACmC,mBAAmB;kBAAE,CAAE;kBAAAoB,QAAA,GAC3EvD,IAAI,CAACc,IAAI,EAAC,uBAAqB,EAACd,IAAI,CAAC+B,mBAAmB,EAAC,uBAAqB,EAAC/B,IAAI,CAACmC,mBAAmB;gBAAA,GADjGnC,IAAI,CAACqB,EAAE;kBAAA8B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAEZ,CACL;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACA,CACL;YAAA,GAbOvD,OAAO,CAACsB,EAAE;cAAA8B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAcf,CACN;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eACRhE,OAAA,CAACL,KAAK;UAACwE,IAAI,EAAC,MAAM;UAAAF,QAAA,gBAChBjE,OAAA;YAAIkE,SAAS,EAAC,aAAa;YAAAD,QAAA,EAAC;UAAsB;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACvDhE,OAAA;YAAMyE,QAAQ,EAAE9C,YAAa;YAACuC,SAAS,EAAC,YAAY;YAAAD,QAAA,gBAClDjE,OAAA;cAAO0E,IAAI,EAAC,MAAM;cAAClD,IAAI,EAAC,SAAS;cAACmD,WAAW,EAAC,SAAS;cAAClD,KAAK,EAAElB,SAAS,CAACE,OAAQ;cAACmE,QAAQ,EAAEtD,iBAAkB;cAAC4C,SAAS,EAAC;YAAc;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAC1IhE,OAAA;cAAO0E,IAAI,EAAC,MAAM;cAAClD,IAAI,EAAC,MAAM;cAACmD,WAAW,EAAC,MAAM;cAAClD,KAAK,EAAElB,SAAS,CAACG,IAAK;cAACkE,QAAQ,EAAEtD,iBAAkB;cAAC4C,SAAS,EAAC;YAAc;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACjIhE,OAAA;cAAO0E,IAAI,EAAC,MAAM;cAAClD,IAAI,EAAC,aAAa;cAACmD,WAAW,EAAC,aAAa;cAAClD,KAAK,EAAElB,SAAS,CAACI,WAAY;cAACiE,QAAQ,EAAEtD,iBAAkB;cAAC4C,SAAS,EAAC;YAAc;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACtJhE,OAAA;cAAO0E,IAAI,EAAC,MAAM;cAAClD,IAAI,EAAC,MAAM;cAACC,KAAK,EAAElB,SAAS,CAACK,IAAK;cAACgE,QAAQ,EAAEtD,iBAAkB;cAAC4C,SAAS,EAAC;YAAc;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAC9GhE,OAAA;cAAQ0E,IAAI,EAAC,QAAQ;cAACR,SAAS,EAAC,iBAAiB;cAAAD,QAAA,EAAC;YAAU;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACRhE,OAAA,CAACL,KAAK;UAACwE,IAAI,EAAC,OAAO;UAAAF,QAAA,gBACjBjE,OAAA;YAAIkE,SAAS,EAAC,aAAa;YAAAD,QAAA,EAAC;UAAwB;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACzDhE,OAAA;YAAIkE,SAAS,EAAC,YAAY;YAAAD,QAAA,EACvB5D,kBAAkB,CAACgE,GAAG,CAACQ,MAAM,iBAC5B7E,OAAA;cAAoBkE,SAAS,EAAC,mEAAmE;cAAAD,QAAA,GAC9FY,MAAM,CAACpE,OAAO,EAAC,KAAG,EAACoE,MAAM,CAACnE,IAAI,EAAC,KAAG,EAACmE,MAAM,CAAClE,WAAW,EAAC,KAAG,EAACkE,MAAM,CAACjE,IAAI,eACtEZ,OAAA;gBAAQsE,OAAO,EAAEA,CAAA,KAAMxC,YAAY,CAAC+C,MAAM,CAAC9C,EAAE,CAAE;gBAACmC,SAAS,EAAC,gBAAgB;gBAAAD,QAAA,EAAC;cAAM;gBAAAJ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA,GAFnFa,MAAM,CAAC9C,EAAE;cAAA8B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAGd,CACL;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb;AAAC9D,EAAA,CA1IQD,GAAG;AAAA6E,EAAA,GAAH7E,GAAG;AA4IZ,eAAeA,GAAG;AAAC,IAAA6E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}