{"ast":null,"code":"var _jsxFileName = \"/Users/dominicmoriello/Documents/GitHub/Copilot Preventative Maintenance/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Navbar from './Navbar';\nimport Login from './Login';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [maintenanceRecords, setMaintenanceRecords] = useState([]);\n  const [newRecord, setNewRecord] = useState({\n    machine: '',\n    part: '',\n    description: '',\n    date: ''\n  });\n  const [machines, setMachines] = useState([]);\n  useEffect(() => {\n    if (loggedIn) {\n      fetchMaintenanceRecords();\n      generateDummyData();\n    }\n  }, [loggedIn]);\n  const fetchMaintenanceRecords = async () => {\n    const response = await axios.get('http://localhost:5001/maintenance');\n    setMaintenanceRecords(response.data);\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewRecord({\n      ...newRecord,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    await axios.post('http://localhost:5001/maintenance', newRecord);\n    fetchMaintenanceRecords();\n  };\n  const handleDelete = async id => {\n    await axios.delete(`http://localhost:5001/maintenance/${id}`);\n    fetchMaintenanceRecords();\n  };\n  const generateDummyData = () => {\n    const dummyMachines = [];\n    for (let i = 1; i <= 4; i++) {\n      const parts = [];\n      const numParts = Math.floor(Math.random() * 15) + 1;\n      for (let j = 1; j <= numParts; j++) {\n        const lastMaintenanceDate = new Date();\n        lastMaintenanceDate.setDate(lastMaintenanceDate.getDate() - Math.floor(Math.random() * 30));\n        const nextMaintenanceDate = new Date(lastMaintenanceDate);\n        nextMaintenanceDate.setDate(lastMaintenanceDate.getDate() + 30);\n        parts.push({\n          id: j,\n          name: `Part ${j}`,\n          lastMaintenanceDate: lastMaintenanceDate.toISOString().split('T')[0],\n          nextMaintenanceDate: nextMaintenanceDate.toISOString().split('T')[0]\n        });\n      }\n      dummyMachines.push({\n        id: i,\n        name: `Machine ${i}`,\n        parts: parts\n      });\n    }\n    setMachines(dummyMachines);\n  };\n  if (!loggedIn) {\n    return /*#__PURE__*/_jsxDEV(Login, {\n      setLoggedIn: setLoggedIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Maintenance Tracker\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: machines.map(machine => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: machine.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: machine.parts.map(part => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [part.name, \" - Last Maintenance: \", part.lastMaintenanceDate, \" - Next Maintenance: \", part.nextMaintenanceDate]\n                }, part.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 19\n              }, this)]\n            }, machine.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/add\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Add Maintenance Record\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"machine\",\n              placeholder: \"Machine\",\n              value: newRecord.machine,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"part\",\n              placeholder: \"Part\",\n              value: newRecord.part,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"description\",\n              placeholder: \"Description\",\n              value: newRecord.description,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              name: \"date\",\n              value: newRecord.date,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Add Record\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/view\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"View Maintenance Records\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: maintenanceRecords.map(record => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [record.machine, \" - \", record.part, \" - \", record.description, \" - \", record.date, /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDelete(record.id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 19\n              }, this)]\n            }, record.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"P+2AxGlm4urfyRV0YcAFNA3Tb8M=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","BrowserRouter","Router","Route","Switch","Navbar","Login","jsxDEV","_jsxDEV","App","_s","loggedIn","setLoggedIn","maintenanceRecords","setMaintenanceRecords","newRecord","setNewRecord","machine","part","description","date","machines","setMachines","fetchMaintenanceRecords","generateDummyData","response","get","data","handleInputChange","e","name","value","target","handleSubmit","preventDefault","post","handleDelete","id","delete","dummyMachines","i","parts","numParts","Math","floor","random","j","lastMaintenanceDate","Date","setDate","getDate","nextMaintenanceDate","push","toISOString","split","fileName","_jsxFileName","lineNumber","columnNumber","children","className","path","exact","map","onSubmit","type","placeholder","onChange","record","onClick","_c","$RefreshReg$"],"sources":["/Users/dominicmoriello/Documents/GitHub/Copilot Preventative Maintenance/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Navbar from './Navbar';\nimport Login from './Login';\nimport './App.css';\n\nfunction App() {\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [maintenanceRecords, setMaintenanceRecords] = useState([]);\n  const [newRecord, setNewRecord] = useState({ machine: '', part: '', description: '', date: '' });\n  const [machines, setMachines] = useState([]);\n\n  useEffect(() => {\n    if (loggedIn) {\n      fetchMaintenanceRecords();\n      generateDummyData();\n    }\n  }, [loggedIn]);\n\n  const fetchMaintenanceRecords = async () => {\n    const response = await axios.get('http://localhost:5001/maintenance');\n    setMaintenanceRecords(response.data);\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setNewRecord({ ...newRecord, [name]: value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    await axios.post('http://localhost:5001/maintenance', newRecord);\n    fetchMaintenanceRecords();\n  };\n\n  const handleDelete = async (id) => {\n    await axios.delete(`http://localhost:5001/maintenance/${id}`);\n    fetchMaintenanceRecords();\n  };\n\n  const generateDummyData = () => {\n    const dummyMachines = [];\n    for (let i = 1; i <= 4; i++) {\n      const parts = [];\n      const numParts = Math.floor(Math.random() * 15) + 1;\n      for (let j = 1; j <= numParts; j++) {\n        const lastMaintenanceDate = new Date();\n        lastMaintenanceDate.setDate(lastMaintenanceDate.getDate() - Math.floor(Math.random() * 30));\n        const nextMaintenanceDate = new Date(lastMaintenanceDate);\n        nextMaintenanceDate.setDate(lastMaintenanceDate.getDate() + 30);\n        parts.push({\n          id: j,\n          name: `Part ${j}`,\n          lastMaintenanceDate: lastMaintenanceDate.toISOString().split('T')[0],\n          nextMaintenanceDate: nextMaintenanceDate.toISOString().split('T')[0]\n        });\n      }\n      dummyMachines.push({\n        id: i,\n        name: `Machine ${i}`,\n        parts: parts\n      });\n    }\n    setMachines(dummyMachines);\n  };\n\n  if (!loggedIn) {\n    return <Login setLoggedIn={setLoggedIn} />;\n  }\n\n  return (\n    <Router>\n      <Navbar />\n      <div className=\"container\">\n        <Switch>\n          <Route path=\"/\" exact>\n            <h1>Maintenance Tracker</h1>\n            <div>\n              {machines.map(machine => (\n                <div key={machine.id}>\n                  <h2>{machine.name}</h2>\n                  <ul>\n                    {machine.parts.map(part => (\n                      <li key={part.id}>\n                        {part.name} - Last Maintenance: {part.lastMaintenanceDate} - Next Maintenance: {part.nextMaintenanceDate}\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              ))}\n            </div>\n          </Route>\n          <Route path=\"/add\">\n            <h1>Add Maintenance Record</h1>\n            <form onSubmit={handleSubmit}>\n              <input type=\"text\" name=\"machine\" placeholder=\"Machine\" value={newRecord.machine} onChange={handleInputChange} />\n              <input type=\"text\" name=\"part\" placeholder=\"Part\" value={newRecord.part} onChange={handleInputChange} />\n              <input type=\"text\" name=\"description\" placeholder=\"Description\" value={newRecord.description} onChange={handleInputChange} />\n              <input type=\"date\" name=\"date\" value={newRecord.date} onChange={handleInputChange} />\n              <button type=\"submit\">Add Record</button>\n            </form>\n          </Route>\n          <Route path=\"/view\">\n            <h1>View Maintenance Records</h1>\n            <ul>\n              {maintenanceRecords.map(record => (\n                <li key={record.id}>\n                  {record.machine} - {record.part} - {record.description} - {record.date}\n                  <button onClick={() => handleDelete(record.id)}>Delete</button>\n                </li>\n              ))}\n            </ul>\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}